// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validation should throw an error on the "headers" option with "[]" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.headers should be a non-empty array."
`;

exports[`validation should throw an error on the "headers" option with "[{"foo":"bar"}]" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.headers[0] has an unknown property 'foo'. These properties are valid:
   object { key?, value? }"
`;

exports[`validation should throw an error on the "headers" option with "1" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.headers should be one of these:
   [object { key?, value? }, ...] (should not have fewer than 1 item) | object { … } | function
   -> Allows to pass custom HTTP headers on each request
   -> Read more at https://github.com/webpack/webpack-dev-middleware#headers
   Details:
    * options.headers should be an array:
      [object { key?, value? }, ...] (should not have fewer than 1 item)
    * options.headers should be an object:
      object { … }
    * options.headers should be an instance of function."
`;

exports[`validation should throw an error on the "headers" option with "true" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.headers should be one of these:
   [object { key?, value? }, ...] (should not have fewer than 1 item) | object { … } | function
   -> Allows to pass custom HTTP headers on each request
   -> Read more at https://github.com/webpack/webpack-dev-middleware#headers
   Details:
    * options.headers should be an array:
      [object { key?, value? }, ...] (should not have fewer than 1 item)
    * options.headers should be an object:
      object { … }
    * options.headers should be an instance of function."
`;

exports[`validation should throw an error on the "index" option with "{}" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.index should be one of these:
   boolean | string
   -> Allows to serve an index of the directory.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#index
   Details:
    * options.index should be a boolean.
    * options.index should be a string."
`;

exports[`validation should throw an error on the "index" option with "0" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.index should be one of these:
   boolean | string
   -> Allows to serve an index of the directory.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#index
   Details:
    * options.index should be a boolean.
    * options.index should be a string."
`;

exports[`validation should throw an error on the "methods" option with "{}" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.methods should be an array:
   [string, ...]
   -> Allows to pass the list of HTTP request methods accepted by the middleware.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#methods"
`;

exports[`validation should throw an error on the "methods" option with "true" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.methods should be an array:
   [string, ...]
   -> Allows to pass the list of HTTP request methods accepted by the middleware.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#methods"
`;

exports[`validation should throw an error on the "mimeTypes" option with "foo" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.mimeTypes should be an object:
   object { … }
   -> Allows a user to register custom mime types or extension mappings.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#mimetypes"
`;

exports[`validation should throw an error on the "outputFileSystem" option with "false" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.outputFileSystem should be an object:
   object { … }
   -> Set the default file system which will be used by webpack as primary destination of generated files.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#outputfilesystem"
`;

exports[`validation should throw an error on the "publicPath" option with "false" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.publicPath should be one of these:
   \\"auto\\" | string | function
   -> The \`publicPath\` specifies the public URL address of the output files when referenced in a browser.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#publicpath
   Details:
    * options.publicPath should be \\"auto\\".
    * options.publicPath should be a string.
    * options.publicPath should be an instance of function."
`;

exports[`validation should throw an error on the "serverSideRender" option with "0" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.serverSideRender should be a boolean.
   -> Instructs the module to enable or disable the server-side rendering mode.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#serversiderender"
`;

exports[`validation should throw an error on the "serverSideRender" option with "foo" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.serverSideRender should be a boolean.
   -> Instructs the module to enable or disable the server-side rendering mode.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#serversiderender"
`;

exports[`validation should throw an error on the "stats" option with "0" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.stats should be one of these:
   \\"none\\" | \\"summary\\" | \\"errors-only\\" | \\"errors-warnings\\" | \\"minimal\\" | \\"normal\\" | \\"detailed\\" | \\"verbose\\" | boolean | object { … }
   -> Stats options object or preset name.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#stats
   Details:
    * options.stats should be one of these:
      \\"none\\" | \\"summary\\" | \\"errors-only\\" | \\"errors-warnings\\" | \\"minimal\\" | \\"normal\\" | \\"detailed\\" | \\"verbose\\"
    * options.stats should be a boolean.
    * options.stats should be an object:
      object { … }"
`;

exports[`validation should throw an error on the "writeToDisk" option with "{}" value 1`] = `
"Invalid options object. Dev Middleware has been initialized using an options object that does not match the API schema.
 - options.writeToDisk should be one of these:
   boolean | function
   -> Allows to write generated files on disk.
   -> Read more at https://github.com/webpack/webpack-dev-middleware#writetodisk
   Details:
    * options.writeToDisk should be a boolean.
    * options.writeToDisk should be an instance of function."
`;
